import { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useWebApp } from '@vkruglikov/react-telegram-web-app';
import Card from '../components/Card';
import Button from '../components/Button';
import SecureVideoPlayer from '../components/SecureVideoPlayer';
import { modulesData } from '../data/modules';
import { useAuthContext } from '../contexts/AuthContext';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ä–æ–∫–æ–≤
const lessonsData = {
  1: [
    {
      id: 1,
      title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Wildberries',
      description: '–û–±–∑–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ Wildberries –∏ –µ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      videoId: 'video-1-1', // ID –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ URL
      duration: '10:25',
      materials: [
        { name: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Wildberries"', url: '#', type: 'presentation' },
        { name: '–ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', url: '#', type: 'checklist' }
      ]
    },
    {
      id: 2,
      title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞',
      description: '–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ Wildberries',
      videoId: 'video-1-2', // ID –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ URL
      duration: '15:30',
      materials: [
        { name: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', url: '#', type: 'guide' },
        { name: '–ß–µ–∫-–ª–∏—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', url: '#', type: 'checklist' }
      ]
    }
  ],
  2: [
    {
      id: 1,
      title: '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ Wildberries',
      description: '–ö–∞–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ –Ω–∏—à–∏',
      videoId: 'video-2-1', // ID –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ URL
      duration: '20:15',
      materials: [
        { name: '–¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∏—à–∏', url: '#', type: 'spreadsheet' },
        { name: '–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π', url: '#', type: 'document' },
        { name: '–ß–µ–∫-–ª–∏—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤', url: '#', type: 'checklist' }
      ]
    }
  ]
};

const LessonPage = () => {
  const { moduleId = '1', lessonId = '1' } = useParams();
  const navigate = useNavigate();
  const webApp = useWebApp();
  const { user } = useAuthContext();
  const [activeTab, setActiveTab] = useState<'video' | 'materials'>('video');
  const [isLoading, setIsLoading] = useState(true);
  const [videoReady, setVideoReady] = useState(false);
  const [videoError, setVideoError] = useState<string | null>(null);

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
  const moduleIdNum = parseInt(moduleId);
  const lessonIdNum = parseInt(lessonId);
  const module = lessonsData[moduleIdNum as keyof typeof lessonsData] || [];
  const lesson = module.find(l => l.id === lessonIdNum);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª—è
  const currentModule = modulesData.find(m => m.id === moduleIdNum);
  const isModuleAvailable = currentModule?.isFree || (user && user.isSubscribed);

  useEffect(() => {
    // –ï—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–¥–ø–∏—Å–∫–∏
    if (!isLoading && !isModuleAvailable) {
      navigate('/subscription');
    }
  }, [isLoading, isModuleAvailable, navigate]);

  useEffect(() => {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 800);
    
    return () => clearTimeout(timer);
  }, []);

  useEffect(() => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞
    setActiveTab('video');
    setVideoReady(false);
    setVideoError(null);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É Telegram
    if (webApp?.MainButton) {
      webApp.MainButton.hide();
    }
    
    return () => {
      webApp?.MainButton?.hide();
    };
  }, [webApp, moduleId, lessonId]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –≤–∏–¥–µ–æ–ø–ª–µ–µ—Ä–∞
  const handleVideoReady = () => {
    setVideoReady(true);
  };

  const handleVideoError = (error: Error) => {
    setVideoError(error.message);
    setVideoReady(false);
  };

  const handleVideoProgress = (progress: { played: number; playedSeconds: number }) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    // –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∑–∂–µ
  };

  const handleVideoEnded = () => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —É—Ä–æ–∫–∞ –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–≥–æ
    // –ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É
    if (webApp?.HapticFeedback) {
      webApp.HapticFeedback.notificationOccurred('success');
    }
    
    if (nextLesson) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É
      if (webApp?.MainButton) {
        webApp.MainButton.setText('–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É');
        webApp.MainButton.show();
        webApp.MainButton.onClick(() => {
          navigate(`/lesson/${moduleId}/${nextLesson.id}`);
        });
      }
    }
  };

  if (isLoading) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <div className="w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin"></div>
        <p className="mt-4 text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–∫–∞...</p>
      </div>
    );
  }

  if (!lesson) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <p className="text-lg mb-4">–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
        <Button 
          variant="primary"
          onClick={() => navigate('/modules')}
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–æ–¥—É–ª—è–º
        </Button>
      </div>
    );
  }

  const nextLesson = module.find(l => l.id === lessonIdNum + 1);
  const prevLesson = module.find(l => l.id === lessonIdNum - 1);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  const getMaterialIcon = (type: string) => {
    switch (type) {
      case 'presentation':
        return 'üìä';
      case 'checklist':
        return '‚úÖ';
      case 'guide':
        return 'üìã';
      case 'spreadsheet':
        return 'üìà';
      case 'document':
        return 'üìÑ';
      default:
        return 'üìÑ';
    }
  };

  return (
    <div className="p-4 pb-44 animate-fade-in">
      <div className="flex items-center justify-between mb-6">
        <Button 
          variant="ghost" 
          onClick={() => navigate('/modules')}
          leftIcon={<span className="text-lg">‚Üê</span>}
        >
          –ö –º–æ–¥—É–ª—è–º
        </Button>
        <h1 className="text-lg font-bold truncate max-w-[200px]">{lesson.title}</h1>
        <div className="w-10"></div> {/* –î–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
      <div className="flex border-b border-gray-200 dark:border-gray-700 mb-4">
        <button
          className={`py-2 px-4 font-medium transition-colors duration-200 ${
            activeTab === 'video' 
              ? 'text-primary border-b-2 border-primary' 
              : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'
          }`}
          onClick={() => setActiveTab('video')}
        >
          –í–∏–¥–µ–æ
        </button>
        <button
          className={`py-2 px-4 font-medium transition-colors duration-200 ${
            activeTab === 'materials' 
              ? 'text-primary border-b-2 border-primary' 
              : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'
          }`}
          onClick={() => setActiveTab('materials')}
        >
          –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
        </button>
      </div>
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="mb-16"> {/* –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        {activeTab === 'video' && (
          <div className="animate-fade-in">
            <div className="aspect-w-16 aspect-h-9 mb-4 bg-gray-200 dark:bg-gray-800 rounded-lg overflow-hidden relative">
              <SecureVideoPlayer
                videoId={lesson.videoId}
                onReady={handleVideoReady}
                onError={handleVideoError}
                onProgress={handleVideoProgress}
                onEnded={handleVideoEnded}
              />
            </div>
            <Card className="mb-4 animate-slide-in-right">
              <h2 className="text-xl font-semibold mb-2">{lesson.title}</h2>
              <p className="text-gray-700 dark:text-gray-300 mb-4">
                {lesson.description}
              </p>
              <div className="flex items-center text-sm text-gray-500 dark:text-gray-400">
                <span className="mr-2">‚è±Ô∏è</span>
                <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson.duration}</span>
              </div>
            </Card>
          </div>
        )}
        
        {activeTab === 'materials' && (
          <div className="animate-fade-in">
            <Card className="mb-4">
              <h2 className="text-xl font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h2>
              {lesson.materials.length > 0 ? (
                <ul className="space-y-3">
                  {lesson.materials.map((material, index) => (
                    <li key={index} className="animate-slide-in-right" style={{ animationDelay: `${index * 100}ms` }}>
                      <Card 
                        variant="outline" 
                        className="flex items-center hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors duration-200"
                        onClick={() => window.open(material.url, '_blank')}
                      >
                        <span className="text-primary mr-2">{getMaterialIcon(material.type)}</span>
                        <span>{material.name}</span>
                      </Card>
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="text-gray-500 dark:text-gray-400">
                  –î–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
                </p>
              )}
            </Card>
          </div>
        )}
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —É—Ä–æ–∫–∞–º–∏ */}
      <div className="fixed bottom-20 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4 flex justify-between">
        <Button 
          variant="outline" 
          onClick={() => prevLesson ? navigate(`/lesson/${moduleId}/${prevLesson.id}`) : navigate('/modules')}
          leftIcon={<span className="text-lg">‚Üê</span>}
          disabled={!prevLesson}
        >
          {prevLesson ? '–ü—Ä–µ–¥—ã–¥—É—â–∏–π' : '–ö –º–æ–¥—É–ª—è–º'}
        </Button>
        
        <Button 
          variant="primary" 
          onClick={() => nextLesson ? navigate(`/lesson/${moduleId}/${nextLesson.id}`) : navigate('/modules')}
          rightIcon={<span className="text-lg">‚Üí</span>}
          disabled={!nextLesson}
        >
          {nextLesson ? '–°–ª–µ–¥—É—é—â–∏–π' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å'}
        </Button>
      </div>
    </div>
  );
};

export default LessonPage; 