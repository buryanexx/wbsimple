import { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useWebApp } from '@vkruglikov/react-telegram-web-app';
import Card from '../components/Card';
import Button from '../components/Button';
import Icon from '../components/Icon';
import SecureVideoPlayer from '../components/SecureVideoPlayer';
import { modulesData } from '../data/modules';
import { useAuth } from '../hooks/useAuth.tsx';

const LessonPage = () => {
  const { moduleId = '0', lessonId = '0' } = useParams();
  const navigate = useNavigate();
  const webApp = useWebApp();
  const { user, loading, isAuthenticated, isPremium, markLessonCompleted, hasCompletedLesson } = useAuth();
  const [activeTab, setActiveTab] = useState<'video' | 'materials'>('video');
  const [isLoading, setIsLoading] = useState(true);
  const [videoCompleted, setVideoCompleted] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
  const moduleIdNum = parseInt(moduleId);
  const lessonIdNum = parseInt(lessonId);
  const module = modulesData.find(m => m.id === moduleIdNum);
  const lesson = module?.lessons.find(l => l.id === lessonIdNum);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥—É–ª—è
  useEffect(() => {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    const timer = setTimeout(() => {
      setIsLoading(false);
    }, 800);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –º–æ–¥—É–ª—å
    const moduleData = modulesData.find(m => m.id === moduleIdNum);
    if (!moduleData) {
      navigate('/modules');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —É—Ä–æ–∫
    const lessonData = moduleData.lessons.find(l => l.id === lessonIdNum);
    if (!lessonData) {
      navigate(`/modules`);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—é
    const isPremiumModule = !moduleData.isFree; // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ isFree –º–æ–¥—É–ª—è
    if (isPremiumModule && !isPremium) {
      navigate('/subscription');
      return;
    }
    
    return () => clearTimeout(timer);
  }, [moduleId, lessonId, navigate, isPremium]);
  
  useEffect(() => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞
    setActiveTab('video');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ —É—Ä–æ–∫
    if (lesson && hasCompletedLesson(lessonIdNum)) {
      setVideoCompleted(true);
    } else {
      setVideoCompleted(false);
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É Telegram
    if (webApp?.BackButton) {
      webApp.BackButton.show();
      webApp.BackButton.onClick(() => {
        navigate('/modules');
      });
    }
    
    return () => {
      webApp?.BackButton?.hide();
      webApp?.MainButton?.hide();
    };
  }, [moduleId, lessonId, webApp, navigate, lesson, hasCompletedLesson, lessonIdNum]);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–∏–¥–µ–æ
  const handleVideoComplete = async () => {
    if (!videoCompleted && isAuthenticated) {
      setVideoCompleted(true);
      try {
        await markLessonCompleted(lessonIdNum);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ —É—Ä–æ–∫–∞ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ:', error);
      }
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤–∏–¥–µ–æ
  const handleVideoProgress = (progress: number) => {
    // –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –±–æ–ª—å—à–µ 90%, —Å—á–∏—Ç–∞–µ–º –≤–∏–¥–µ–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–º
    if (progress >= 90 && !videoCompleted && isAuthenticated) {
      handleVideoComplete();
    }
  };
  
  if (isLoading || loading) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <div className="w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin"></div>
        <p className="mt-4 text-gray-600 dark:text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–∫–∞...</p>
      </div>
    );
  }
  
  if (!lesson || !module) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <div className="text-4xl mb-4">üòï</div>
        <h1 className="text-xl font-bold mb-2">–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
        <p className="text-gray-600 dark:text-gray-400 mb-4 text-center">
          –ò–∑–≤–∏–Ω–∏—Ç–µ, –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–π —É—Ä–æ–∫ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.
        </p>
        <Button 
          variant="primary" 
          onClick={() => navigate('/modules')}
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–æ–¥—É–ª—è–º
        </Button>
      </div>
    );
  }
  
  const nextLesson = module.lessons.find(l => l.id === lessonIdNum + 1);
  const prevLesson = module.lessons.find(l => l.id === lessonIdNum - 1);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  const getMaterialIcon = (type: string) => {
    switch (type) {
      case 'pdf':
        return <Icon name="file" className="text-red-500" />;
      case 'doc':
        return <Icon name="file" className="text-blue-500" />;
      case 'xls':
        return <Icon name="file" className="text-green-500" />;
      case 'link':
        return <Icon name="link" className="text-purple-500" />;
      default:
        return <Icon name="file" className="text-gray-500" />;
    }
  };
  
  return (
    <div className="pb-44">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="sticky top-0 z-10 bg-white dark:bg-gray-900 shadow-sm">
        <div className="flex items-center justify-between p-4">
          <Button 
            variant="ghost" 
            onClick={() => navigate('/modules')}
            leftIcon={<span className="text-lg">‚Üê</span>}
          >
            –ö –º–æ–¥—É–ª—è–º
          </Button>
          <h1 className="text-lg font-bold truncate max-w-[200px]">{lesson.title}</h1>
          <div className="w-10"></div> {/* –î–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
        </div>
        
        {/* –¢–∞–±—ã */}
        <div className="flex border-b border-gray-200 dark:border-gray-700">
          <button
            className={`flex-1 py-3 px-4 text-center font-medium ${
              activeTab === 'video'
                ? 'text-primary border-b-2 border-primary'
                : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'
            }`}
            onClick={() => setActiveTab('video')}
          >
            –í–∏–¥–µ–æ
          </button>
          <button
            className={`flex-1 py-3 px-4 text-center font-medium ${
              activeTab === 'materials'
                ? 'text-primary border-b-2 border-primary'
                : 'text-gray-500 hover:text-gray-700 dark:hover:text-gray-300'
            }`}
            onClick={() => setActiveTab('materials')}
          >
            –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
          </button>
        </div>
      </div>
      
      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="p-4">
        {activeTab === 'video' ? (
          <div>
            <div className="mb-6">
              <div className="aspect-w-16 aspect-h-9 mb-4 bg-gray-200 dark:bg-gray-800 rounded-lg overflow-hidden relative">
                {isAuthenticated ? (
                  <SecureVideoPlayer
                    videoId={lesson.videoId}
                    lessonId={lessonIdNum.toString()}
                    onProgress={handleVideoProgress}
                    onComplete={handleVideoComplete}
                    className="w-full h-full"
                  />
                ) : (
                  <div className="flex items-center justify-center h-full bg-gray-200 dark:bg-gray-800">
                    <div className="text-center p-4">
                      <p className="text-gray-700 dark:text-gray-300 mb-4">
                        –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∏–¥–µ–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
                      </p>
                      <Button 
                        variant="primary" 
                        onClick={() => navigate('/')}
                      >
                        –í–æ–π—Ç–∏
                      </Button>
                    </div>
                  </div>
                )}
              </div>
              <Card className="mb-4 animate-slide-in-right">
                <h2 className="text-xl font-semibold mb-2">{lesson.title}</h2>
                <p className="text-gray-700 dark:text-gray-300 mb-4">
                  {lesson.description}
                </p>
                <div className="flex items-center justify-between">
                  <div className="flex items-center text-sm text-gray-500 dark:text-gray-400">
                    <span className="mr-2">‚è±Ô∏è</span>
                    <span>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson.duration}</span>
                  </div>
                  {videoCompleted && (
                    <div className="flex items-center text-sm text-green-500">
                      <span className="mr-2">‚úÖ</span>
                      <span>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</span>
                    </div>
                  )}
                </div>
              </Card>
            </div>
            
            {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —É—Ä–æ–∫–∞–º–∏ */}
            <div className="flex justify-between">
              {prevLesson ? (
                <Button 
                  variant="outline" 
                  onClick={() => navigate(`/lesson/${moduleId}/${prevLesson.id}`)}
                  leftIcon={<span className="text-lg">‚Üê</span>}
                >
                  –ü—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–∫
                </Button>
              ) : (
                <div></div>
              )}
              
              {nextLesson ? (
                <Button 
                  variant="primary" 
                  onClick={() => navigate(`/lesson/${moduleId}/${nextLesson.id}`)}
                  rightIcon={<span className="text-lg">‚Üí</span>}
                >
                  –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
                </Button>
              ) : (
                <Button 
                  variant="accent" 
                  onClick={() => navigate('/modules')}
                >
                  –ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å
                </Button>
              )}
            </div>
          </div>
        ) : (
          <div>
            <Card className="mb-4">
              <h2 className="text-xl font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h2>
              {lesson.materials && lesson.materials.length > 0 ? (
                <ul className="space-y-3">
                  {lesson.materials.map((material, index) => (
                    <li key={index} className="animate-slide-in-right" style={{ animationDelay: `${index * 100}ms` }}>
                      <Card 
                        variant="outline" 
                        className="hover:shadow-md transition-shadow duration-300"
                      >
                        <a 
                          href={material.url} 
                          target="_blank" 
                          rel="noopener noreferrer"
                          className="flex items-center p-2"
                        >
                          <div className="mr-3 text-primary">
                            {getMaterialIcon(material.type)}
                          </div>
                          <div className="flex-1">
                            <h3 className="font-medium">{material.title}</h3>
                            <p className="text-sm text-gray-500 dark:text-gray-400">
                              {material.description}
                            </p>
                          </div>
                          <div className="ml-2">
                            <Icon name="download" className="text-gray-400" />
                          </div>
                        </a>
                      </Card>
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="text-gray-500 dark:text-gray-400 text-center py-4">
                  –î–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
                </p>
              )}
            </Card>
          </div>
        )}
      </div>
    </div>
  );
};

export default LessonPage; 