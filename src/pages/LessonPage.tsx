import { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useWebApp } from '@vkruglikov/react-telegram-web-app';
import ReactPlayer from 'react-player/lazy';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ä–æ–∫–æ–≤
const lessonsData = {
  1: [
    {
      id: 1,
      title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Wildberries',
      description: '–û–±–∑–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ Wildberries –∏ –µ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      videoUrl: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ', // –î–µ–º–æ-–≤–∏–¥–µ–æ
      duration: '10:25',
      materials: [
        { name: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Wildberries"', url: '#' },
        { name: '–ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', url: '#' }
      ],
      quiz: [
        {
          question: '–ö–∞–∫–æ–π –≥–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω–∏—è Wildberries?',
          options: ['2000', '2004', '2010', '2015'],
          correctAnswer: 1
        }
      ]
    },
    {
      id: 2,
      title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞',
      description: '–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ Wildberries',
      videoUrl: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ', // –î–µ–º–æ-–≤–∏–¥–µ–æ
      duration: '15:30',
      materials: [
        { name: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', url: '#' }
      ],
      quiz: [
        {
          question: '–ö–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ Wildberries?',
          options: ['–ü–∞—Å–ø–æ—Ä—Ç', '–ò–ù–ù', '–°–ù–ò–õ–°', '–í—Å–µ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ'],
          correctAnswer: 3
        }
      ]
    }
  ],
  2: [
    {
      id: 1,
      title: '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ Wildberries',
      description: '–ö–∞–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ –Ω–∏—à–∏',
      videoUrl: 'https://www.youtube.com/watch?v=dQw4w9WgXcQ', // –î–µ–º–æ-–≤–∏–¥–µ–æ
      duration: '20:15',
      materials: [
        { name: '–¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∏—à–∏', url: '#' },
        { name: '–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π', url: '#' }
      ],
      quiz: [
        {
          question: '–ö–∞–∫–æ–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–∏—à–∏?',
          options: ['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂', '–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞', '–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å', '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è'],
          correctAnswer: 2
        }
      ]
    }
  ]
};

const LessonPage = () => {
  const { moduleId = '1', lessonId = '1' } = useParams();
  const navigate = useNavigate();
  const webApp = useWebApp();
  const [activeTab, setActiveTab] = useState<'video' | 'materials' | 'quiz'>('video');
  const [quizAnswers, setQuizAnswers] = useState<number[]>([]);
  const [showResults, setShowResults] = useState(false);

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
  const moduleIdNum = parseInt(moduleId);
  const lessonIdNum = parseInt(lessonId);
  const module = lessonsData[moduleIdNum as keyof typeof lessonsData] || [];
  const lesson = module.find(l => l.id === lessonIdNum);

  useEffect(() => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —É—Ä–æ–∫–∞
    setActiveTab('video');
    setQuizAnswers([]);
    setShowResults(false);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É Telegram
    if (webApp?.MainButton) {
      if (activeTab === 'quiz') {
        webApp.MainButton.setText('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã');
        webApp.MainButton.show();
        webApp.MainButton.onClick(() => {
          setShowResults(true);
        });
      } else {
        webApp.MainButton.hide();
      }
    }
    
    return () => {
      webApp?.MainButton?.hide();
    };
  }, [webApp, moduleId, lessonId, activeTab]);

  if (!lesson) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <p>–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
        <button 
          onClick={() => navigate('/modules')} 
          className="tg-button mt-4"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–æ–¥—É–ª—è–º
        </button>
      </div>
    );
  }

  const handleAnswerSelect = (questionIndex: number, answerIndex: number) => {
    const newAnswers = [...quizAnswers];
    newAnswers[questionIndex] = answerIndex;
    setQuizAnswers(newAnswers);
  };

  const isAnswerCorrect = (questionIndex: number) => {
    if (!showResults) return null;
    const question = lesson.quiz[questionIndex];
    return quizAnswers[questionIndex] === question.correctAnswer;
  };

  const nextLesson = module.find(l => l.id === lessonIdNum + 1);
  const prevLesson = module.find(l => l.id === lessonIdNum - 1);

  return (
    <div className="p-4">
      <div className="flex items-center justify-between mb-6">
        <button 
          onClick={() => navigate('/modules')} 
          className="flex items-center text-primary"
        >
          ‚Üê –ö –º–æ–¥—É–ª—è–º
        </button>
        <h1 className="text-lg font-bold truncate max-w-[200px]">{lesson.title}</h1>
        <div className="w-6"></div> {/* –î–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
      <div className="flex border-b border-gray-200 dark:border-gray-700 mb-4">
        <button
          className={`py-2 px-4 font-medium ${
            activeTab === 'video' 
              ? 'text-primary border-b-2 border-primary' 
              : 'text-gray-500 dark:text-gray-400'
          }`}
          onClick={() => setActiveTab('video')}
        >
          –í–∏–¥–µ–æ
        </button>
        <button
          className={`py-2 px-4 font-medium ${
            activeTab === 'materials' 
              ? 'text-primary border-b-2 border-primary' 
              : 'text-gray-500 dark:text-gray-400'
          }`}
          onClick={() => setActiveTab('materials')}
        >
          –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
        </button>
        <button
          className={`py-2 px-4 font-medium ${
            activeTab === 'quiz' 
              ? 'text-primary border-b-2 border-primary' 
              : 'text-gray-500 dark:text-gray-400'
          }`}
          onClick={() => setActiveTab('quiz')}
        >
          –¢–µ—Å—Ç
        </button>
      </div>
      
      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="mb-16"> {/* –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        {activeTab === 'video' && (
          <div>
            <div className="aspect-w-16 aspect-h-9 mb-4 bg-black rounded-lg overflow-hidden">
              <div className="w-full h-0 pb-[56.25%] relative">
                <ReactPlayer
                  url={lesson.videoUrl}
                  width="100%"
                  height="100%"
                  controls
                  style={{ position: 'absolute', top: 0, left: 0 }}
                />
              </div>
            </div>
            <h2 className="text-xl font-semibold mb-2">{lesson.title}</h2>
            <p className="text-gray-700 dark:text-gray-300 mb-4">
              {lesson.description}
            </p>
            <div className="text-sm text-gray-500 dark:text-gray-400">
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson.duration}
            </div>
          </div>
        )}
        
        {activeTab === 'materials' && (
          <div>
            <h2 className="text-xl font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</h2>
            {lesson.materials.length > 0 ? (
              <ul className="space-y-3">
                {lesson.materials.map((material, index) => (
                  <li key={index}>
                    <a 
                      href={material.url} 
                      className="tg-card flex items-center"
                      target="_blank" 
                      rel="noopener noreferrer"
                    >
                      <span className="text-primary mr-2">üìÑ</span>
                      <span>{material.name}</span>
                    </a>
                  </li>
                ))}
              </ul>
            ) : (
              <p className="text-gray-500 dark:text-gray-400">
                –î–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
              </p>
            )}
          </div>
        )}
        
        {activeTab === 'quiz' && (
          <div>
            <h2 className="text-xl font-semibold mb-4">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è</h2>
            {lesson.quiz.map((question, qIndex) => (
              <div key={qIndex} className="tg-card mb-4">
                <h3 className="font-medium mb-3">{question.question}</h3>
                <div className="space-y-2">
                  {question.options.map((option, oIndex) => (
                    <div 
                      key={oIndex}
                      onClick={() => handleAnswerSelect(qIndex, oIndex)}
                      className={`p-3 rounded-lg border cursor-pointer ${
                        quizAnswers[qIndex] === oIndex 
                          ? showResults
                            ? isAnswerCorrect(qIndex)
                              ? 'bg-green-100 dark:bg-green-900 border-green-500'
                              : 'bg-red-100 dark:bg-red-900 border-red-500'
                            : 'bg-primary/10 border-primary'
                          : 'border-gray-200 dark:border-gray-700'
                      }`}
                    >
                      {option}
                      {showResults && quizAnswers[qIndex] === oIndex && (
                        <span className="float-right">
                          {isAnswerCorrect(qIndex) ? '‚úì' : '‚úó'}
                        </span>
                      )}
                      {showResults && oIndex === question.correctAnswer && !isAnswerCorrect(qIndex) && (
                        <span className="float-right text-green-500">‚úì</span>
                      )}
                    </div>
                  ))}
                </div>
                {showResults && (
                  <div className={`mt-3 p-2 rounded-lg ${
                    isAnswerCorrect(qIndex) 
                      ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' 
                      : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200'
                  }`}>
                    {isAnswerCorrect(qIndex) 
                      ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!' 
                      : `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${question.options[question.correctAnswer]}`
                    }
                  </div>
                )}
              </div>
            ))}
          </div>
        )}
      </div>
      
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —É—Ä–æ–∫–∞–º */}
      <div className="fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4 flex justify-between">
        <button 
          onClick={() => prevLesson && navigate(`/lesson/${moduleId}/${prevLesson.id}`)}
          className={`tg-button ${!prevLesson ? 'opacity-50 cursor-not-allowed' : ''}`}
          disabled={!prevLesson}
        >
          ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
        </button>
        <button 
          onClick={() => nextLesson && navigate(`/lesson/${moduleId}/${nextLesson.id}`)}
          className={`tg-button-accent ${!nextLesson ? 'opacity-50 cursor-not-allowed' : ''}`}
          disabled={!nextLesson}
        >
          –°–ª–µ–¥—É—é—â–∏–π ‚Üí
        </button>
      </div>
    </div>
  );
};

export default LessonPage; 