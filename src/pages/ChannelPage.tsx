import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useWebApp } from '@vkruglikov/react-telegram-web-app';

const ChannelPage = () => {
  const navigate = useNavigate();
  const webApp = useWebApp();
  const [hasSubscription, setHasSubscription] = useState(false);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const checkSubscription = () => {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
      setTimeout(() => {
        setHasSubscription(false); // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º false
        setIsLoading(false);
      }, 1000);
    };
    
    checkSubscription();
  }, []);

  const handleJoinChannel = () => {
    if (hasSubscription) {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∏
      // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Telegram
      if (webApp) {
        webApp.openTelegramLink('https://t.me/+exampleinvitelink');
      }
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
      if (webApp) {
        webApp.showPopup({
          title: '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞',
          message: '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.',
          buttons: [
            { id: 'subscribe', type: 'default', text: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' },
            { id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' }
          ]
        }, (buttonId: string) => {
          if (buttonId === 'subscribe') {
            navigate('/subscription');
          }
        });
      }
    }
  };

  return (
    <div className="p-4">
      <div className="flex items-center justify-between mb-6">
        <button 
          onClick={() => navigate('/')} 
          className="flex items-center text-primary"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
        <h1 className="text-xl font-bold">–ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª</h1>
        <div className="w-6"></div> {/* –î–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
      </div>
      
      <div className="tg-card mb-6 text-center py-8">
        <div className="text-5xl mb-4">üë•</div>
        <h2 className="text-xl font-semibold mb-2">–ó–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ WB Simple</h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6 max-w-md mx-auto">
          –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ Wildberries, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.
        </p>
        
        {isLoading ? (
          <div className="flex justify-center items-center h-12">
            <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-primary"></div>
          </div>
        ) : (
          <button 
            onClick={handleJoinChannel} 
            className={`px-6 py-3 rounded-lg font-medium ${
              hasSubscription 
                ? 'bg-primary text-white' 
                : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300'
            }`}
          >
            {hasSubscription ? '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É' : '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞'}
          </button>
        )}
      </div>
      
      <div className="tg-card">
        <h3 className="text-lg font-semibold mb-3">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞:</h3>
        <ul className="space-y-2">
          <li className="flex items-start">
            <span className="text-primary mr-2">‚úì</span>
            <span>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span>
          </li>
          <li className="flex items-start">
            <span className="text-primary mr-2">‚úì</span>
            <span>–û–±—â–µ–Ω–∏–µ —Å –æ–ø—ã—Ç–Ω—ã–º–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏ Wildberries</span>
          </li>
          <li className="flex items-start">
            <span className="text-primary mr-2">‚úì</span>
            <span>–†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º –º–æ–¥—É–ª—è–º –∏ —à–∞–±–ª–æ–Ω–∞–º</span>
          </li>
          <li className="flex items-start">
            <span className="text-primary mr-2">‚úì</span>
            <span>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É</span>
          </li>
          <li className="flex items-start">
            <span className="text-primary mr-2">‚úì</span>
            <span>–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π</span>
          </li>
        </ul>
      </div>
      
      {!hasSubscription && (
        <div className="mt-6">
          <button 
            onClick={() => navigate('/subscription')} 
            className="tg-button-accent w-full"
          >
            –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
          </button>
        </div>
      )}
    </div>
  );
};

export default ChannelPage; 