import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';

dotenv.config();

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '';

if (!TELEGRAM_BOT_TOKEN) {
  console.error('TELEGRAM_BOT_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env —Ñ–∞–π–ª–µ');
  process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(TELEGRAM_BOT_TOKEN);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
  ctx.reply(
    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ WB Simple! üöÄ\n\n' +
    '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫—É –Ω–∞ Wildberries —Å –Ω—É–ª—è –¥–æ 1.000.000 —Ä—É–±–ª–µ–π.\n\n' +
    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:'
  );
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
  ctx.reply('–û—Ç–∫—Ä—ã—Ç—å WB Simple', {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', web_app: { url: process.env.WEBAPP_URL || 'https://example.com' } }]
      ]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.help((ctx) => {
  ctx.reply(
    'WB Simple - –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫—É –Ω–∞ Wildberries.\n\n' +
    '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
    '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n' +
    '/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n' +
    '/subscription - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ'
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /subscription
bot.command('subscription', (ctx) => {
  ctx.reply(
    '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ WB Simple –¥–∞–µ—Ç –≤–∞–º:\n\n' +
    '‚úÖ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º 8 –º–æ–¥—É–ª—è–º –∫—É—Ä—Å–∞\n' +
    '‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫—É —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Ñ–∏—à–µ–∫ –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤\n' +
    '‚úÖ –î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª\n' +
    '‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n\n' +
    '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 999 ‚ÇΩ/–º–µ—Å—è—Ü\n\n' +
    '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:',
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', web_app: { url: `${process.env.WEBAPP_URL || 'https://example.com'}/subscription` } }]
        ]
      }
    }
  );
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
export const sendNotification = async (telegramId: number, message: string): Promise<void> => {
  try {
    await bot.telegram.sendMessage(telegramId, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª
export const sendChannelInvite = async (telegramId: number, channelLink: string): Promise<void> => {
  try {
    await bot.telegram.sendMessage(
      telegramId,
      '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É WB Simple.\n\n' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—Ö–æ–¥–∞:',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É', url: channelLink }]
          ]
        }
      }
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∏:', error);
  }
};

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
export const startBot = async (): Promise<void> => {
  try {
    await bot.launch();
    console.log('Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞:', error);
  }
};

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

export default {
  bot,
  startBot,
  sendNotification,
  sendChannelInvite
}; 