import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import morgan from 'morgan';
import path from 'path';
import dotenv from 'dotenv';
import fs from 'fs';
import { apiRoutes } from './routes';
import { redis } from './utils/redis.factory'; // ะะผะฟะพััะธััะตะผ ะฝะฐัั ัะฐะฑัะธะบั Redis

// ะะฐะณััะทะบะฐ ะฟะตัะตะผะตะฝะฝัั ะพะบััะถะตะฝะธั
dotenv.config();

// ะกะพะทะดะฐะฝะธะต Express ะฟัะธะปะพะถะตะฝะธั
const app = express();
const port = parseInt(process.env.PORT || '5005', 10);

// Middleware
app.use(cors());
app.use(helmet());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(morgan('combined'));

// ะกะพะทะดะฐะฝะธะต ะดะธัะตะบัะพัะธะน, ะตัะปะธ ะฝะต ัััะตััะฒััั
const logDirectory = path.join(__dirname, '../logs');
const uploadDirectory = path.join(__dirname, '../uploads');
if (!fs.existsSync(logDirectory)) {
  fs.mkdirSync(logDirectory, { recursive: true });
}
if (!fs.existsSync(uploadDirectory)) {
  fs.mkdirSync(uploadDirectory, { recursive: true });
}

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั
app.use('/uploads', express.static(uploadDirectory));

// ะะฐััััั ะฟัะพะฒะตัะบะธ ัะพััะพัะฝะธั
app.get('/health', (_req, res) => {
  // ะัะพะฒะตััะตะผ ัะฐะบะถะต ัะพััะพัะฝะธะต Redis
  redis.ping()
    .then(() => {
      res.status(200).json({
        status: 'UP',
        version: '1.0.0',
        timestamp: new Date().toISOString(),
        redis: 'UP'
      });
    })
    .catch(() => {
      res.status(200).json({
        status: 'UP',
        version: '1.0.0',
        timestamp: new Date().toISOString(),
        redis: 'DOWN'
      });
    });
});

// ะะพะดะบะปััะฐะตะผ API ะผะฐัััััั
app.use('/api', apiRoutes);

// ะะฑัะฐะฑะพัะบะฐ ะพัะธะฑะพะบ
app.use((err: Error, _req: express.Request, res: express.Response, _next: express.NextFunction) => {
  console.error(err.stack);
  res.status(500).json({
    status: 'ERROR',
    message: err.message || 'ะะฝัััะตะฝะฝัั ะพัะธะฑะบะฐ ัะตัะฒะตัะฐ'
  });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
if (require.main === module) {
  app.listen(port, () => {
    console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${port}`);
    console.log(`๐ ะัะพะฒะตัะบะฐ ัะพััะพัะฝะธั: http://localhost:${port}/health`);
    console.log(`๐ API ะดะพัััะฟะฝะพ ะฟะพ ะฐะดัะตัั: http://localhost:${port}/api`);
  });
}

export { app, redis }; 