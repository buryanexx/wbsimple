upstream api_backend {
    # Здесь можно добавить несколько экземпляров API для масштабирования
    server api:5005;
    # server api2:5005;
    # server api3:5005;
    # Метод балансировки - по наименьшему количеству активных соединений
    least_conn;
    # Включаем кеширование соединений для производительности
    keepalive 100;
}

server {
    listen 80;
    server_name api.wbsimple.ru;
    client_max_body_size 100M;

    # Перенаправляем HTTP на HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.wbsimple.ru;
    client_max_body_size 100M;

    # SSL-сертификаты (в продакшене настроить реальные сертификаты)
    ssl_certificate /etc/nginx/ssl/api.wbsimple.ru.crt;
    ssl_certificate_key /etc/nginx/ssl/api.wbsimple.ru.key;
    
    # Настройки SSL для безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Основной маршрут для API
    location / {
        # Применяем ограничения запросов для защиты от DDoS
        limit_req zone=api_limit burst=10 nodelay;
        limit_conn addr 10;
        
        # Заголовки для CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # Для OPTIONS (preflight) возвращаем 200 OK
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Проксирование запросов к API
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Таймауты для долгих запросов
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
    }
    
    # Маршрут для видео-файлов
    location /videos/ {
        proxy_pass http://api_backend/videos/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Кэширование для статических файлов
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Буферизация для видео
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 16k;
    }
    
    # Мониторинг состояния
    location /status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
} 